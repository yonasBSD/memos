System.register(["./chunk-IUKPXING-legacy.Dqsi3ih4.js","./mermaid-vendor-legacy.CXJ3QjYr.js","./gitGraph-YCYPL57B-legacy.hOY-hteK.js","./react-vendor-legacy.dIDhV_HT.js","./utils-vendor-legacy.4FVC2SsJ.js"],(function(t,e){"use strict";var a,r,n,l,o,i,s,c,d,k,p,b,g,h,u,f;return{setters:[t=>{a=t.p},t=>{r=t._,n=t.s,l=t.g,o=t.v,i=t.t,s=t.a,c=t.b,d=t.G,k=t.L,p=t.f,b=t.A,g=t.H,h=t.I,u=t.l},t=>{f=t.p},null,null],execute:function(){var e={packet:[]},y=structuredClone(e),x=h.packet,$=r((()=>{const t=d({...x,...g().packet});return t.showBits&&(t.paddingY+=10),t}),"getConfig"),w=r((()=>y.packet),"getPacket"),C={pushWord:r((t=>{t.length>0&&y.packet.push(t)}),"pushWord"),getPacket:w,getConfig:$,clear:r((()=>{b(),y=structuredClone(e)}),"clear"),setAccTitle:c,getAccTitle:s,setDiagramTitle:i,getDiagramTitle:o,getAccDescription:l,setAccDescription:n},m=r((t=>{a(t,C);let e=-1,r=[],n=1;const{bitsPerRow:l}=C.getConfig();for(let{start:a,end:o,label:i}of t.blocks){if(o&&o<a)throw new Error(`Packet block ${a} - ${o} is invalid. End must be greater than start.`);if(a!==e+1)throw new Error(`Packet block ${a} - ${o??a} is not contiguous. It should start from ${e+1}.`);for(e=o??a,u.debug(`Packet block ${a} - ${e} with label ${i}`);r.length<=l+1&&C.getPacket().length<1e4;){const[t,e]=B({start:a,end:o,label:i},n,l);if(r.push(t),t.end+1===n*l&&(C.pushWord(r),r=[],n++),!e)break;({start:a,end:o,label:i}=e)}}C.pushWord(r)}),"populate"),B=r(((t,e,a)=>{if(void 0===t.end&&(t.end=t.start),t.start>t.end)throw new Error(`Block start ${t.start} is greater than block end ${t.end}.`);return t.end+1<=e*a?[t,void 0]:[{start:t.start,end:e*a-1,label:t.label},{start:e*a,end:t.end,label:t.label}]}),"getNextFittingBlock"),P={parse:r((async t=>{const e=await f("packet",t);u.debug(e),m(e)}),"parse")},S=r(((t,e,a,r)=>{const n=r.db,l=n.getConfig(),{rowHeight:o,paddingY:i,bitWidth:s,bitsPerRow:c}=l,d=n.getPacket(),b=n.getDiagramTitle(),g=o+i,h=g*(d.length+1)-(b?0:o),u=s*c+2,f=k(e);f.attr("viewbox",`0 0 ${u} ${h}`),p(f,h,u,l.useMaxWidth);for(const[k,p]of d.entries())v(f,p,k,l);f.append("text").text(b).attr("x",u/2).attr("y",h-g/2).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","packetTitle")}),"draw"),v=r(((t,e,a,{rowHeight:r,paddingX:n,paddingY:l,bitWidth:o,bitsPerRow:i,showBits:s})=>{const c=t.append("g"),d=a*(r+l)+l;for(const k of e){const t=k.start%i*o+1,e=(k.end-k.start+1)*o-n;if(c.append("rect").attr("x",t).attr("y",d).attr("width",e).attr("height",r).attr("class","packetBlock"),c.append("text").attr("x",t+e/2).attr("y",d+r/2).attr("class","packetLabel").attr("dominant-baseline","middle").attr("text-anchor","middle").text(k.label),!s)continue;const a=k.end===k.start,l=d-2;c.append("text").attr("x",t+(a?e/2:0)).attr("y",l).attr("class","packetByte start").attr("dominant-baseline","auto").attr("text-anchor",a?"middle":"start").text(k.start),a||c.append("text").attr("x",t+e).attr("y",l).attr("class","packetByte end").attr("dominant-baseline","auto").attr("text-anchor","end").text(k.end)}}),"drawWord"),W={byteFontSize:"10px",startByteColor:"black",endByteColor:"black",labelColor:"black",labelFontSize:"12px",titleColor:"black",titleFontSize:"14px",blockStrokeColor:"black",blockStrokeWidth:"1",blockFillColor:"#efefef"};t("diagram",{parser:P,db:C,renderer:{draw:S},styles:r((({packet:t}={})=>{const e=d(W,t);return`\n\t.packetByte {\n\t\tfont-size: ${e.byteFontSize};\n\t}\n\t.packetByte.start {\n\t\tfill: ${e.startByteColor};\n\t}\n\t.packetByte.end {\n\t\tfill: ${e.endByteColor};\n\t}\n\t.packetLabel {\n\t\tfill: ${e.labelColor};\n\t\tfont-size: ${e.labelFontSize};\n\t}\n\t.packetTitle {\n\t\tfill: ${e.titleColor};\n\t\tfont-size: ${e.titleFontSize};\n\t}\n\t.packetBlock {\n\t\tstroke: ${e.blockStrokeColor};\n\t\tstroke-width: ${e.blockStrokeWidth};\n\t\tfill: ${e.blockFillColor};\n\t}\n\t`}),"styles")})}}}));
