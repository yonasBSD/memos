import{j as c}from"./mui-vendor.BwEHDYNi.js";import{d as i}from"./mermaid-vendor.YaF7NM7v.js";import{a as u}from"./react-vendor.DIaRSUZC.js";import{j as h,k as d,v as o,P as y,D as m,S as T,M as S}from"./app.BmPucvBz.js";import"./utils-vendor.gMQV7HrB.js";import"./highlight-vendor.BCvQicfw.js";import"./katex-vendor.BOojJMwU.js";import"./leaflet-vendor.BDS7nALv.js";const w=()=>{const l=h(),a=d(),f=u.useMemo(()=>{const e=[],s=[],r=[];for(const t of a.filters)if(t.factor==="contentSearch")s.push('"'.concat(t.value,'"'));else if(t.factor==="tagSearch")r.push('"'.concat(t.value,'"'));else if(t.factor==="property.hasLink")e.push("has_link == true");else if(t.factor==="property.hasTaskList")e.push("has_task_list == true");else if(t.factor==="property.hasCode")e.push("has_code == true");else if(t.factor==="displayTime"){const n=new Date(t.value),p=(n.getTime()+n.getTimezoneOffset()*60*1e3)/1e3;e.push("display_time_after == ".concat(p)),e.push("display_time_before == ".concat(p+60*60*24))}return s.length>0&&e.push("content_search == [".concat(s.join(", "),"]")),r.length>0&&e.push("tag_search == [".concat(r.join(", "),"]")),e.join(" && ")},[l,a.filters,o.state.orderByTimeAsc]);return c.jsx(y,{renderer:e=>c.jsx(S,{memo:e,showCreator:!0,showVisibility:!0,compact:!0},"".concat(e.name,"-").concat(e.updateTime)),listSort:e=>e.filter(s=>s.state===T.NORMAL).sort((s,r)=>o.state.orderByTimeAsc?i(s.displayTime).unix()-i(r.displayTime).unix():i(r.displayTime).unix()-i(s.displayTime).unix()),direction:o.state.orderByTimeAsc?m.ASC:m.DESC,oldFilter:f})};export{w as default};
